<html>
<head>
<title>Any</title>
<link rel="stylesheet" type="text/css" href="style.css">
</head>
<body>
<div id="fb_body_wrapper">
<div id="fb_tab">
<div id="fb_tab_l">Any</div>
<div id="fb_tab_r">&nbsp;<img src="images/fblogo_mini.gif" /></div> 
</div> 
<div id="fb_pg_wrapper">
<div id="fb_pg_body">
	<tt><b>Any</b></tt> n'est pas un type r&eacute;el, mais il est utilis&eacute; comme un espace r&eacute;serv&eacute; de diverses mani&egrave;res.<br \>
<br \>
<div class="fb_sect_title">Syntaxe</div><div class="fb_sect_cont"><tt><br \>
<i>identifier</i> <a href="KeyPgAs.html">As</a> <b>Any</b> <a href="KeyPgPointer.html">Pointer</a>|<a href="KeyPgPtr.html">Ptr</a><br \>
<i>ou</i><br \>
<a href="KeyPgDeclare.html">Declare</a> { <a href="KeyPgSub.html">Sub</a> | <a href="KeyPgFunction.html">Function</a> } <i>identifier</i> ( [ ..., ] <a href="KeyPgByref.html">ByRef</a> <i>identifier</i> <a href="KeyPgAs.html">As</a> <b>Any</b> [ , ... ] )<br \>
<i>ou</i><br \>
<a href="KeyPgDim.html">Dim</a> <i>identifier</i> <a href="KeyPgAs.html">As</a> <a href="DataType.html">datatype</a> = <b>Any</b><br \>
</tt><br \>
</div><div class="fb_sect_title">Usage</div><div class="fb_sect_cont"><tt><br \>
<b></tt>1)</b><tt> Dim <i>identifier</i> as <b>Any</b> ptr<br \>
<i>ou</i><br \>
<b></tt>1)</b><tt> Declare Sub <i>identifier</i> ( [ byval | byref ] <i>identifier</i> as <b>Any</b> ptr )<br \>
<i>ou</i><br \>
<b></tt>2)</b><tt> Dim <i>identifier</i> As <i>datatype</i> = <b>Any</b><br \>
<i>ou</i><br \>
<b></tt>3)</b><tt> Declare Sub <i>identifier</i> ( byref <i>identifier</i> as <b>Any</b> )<br \>
</tt><br \>
</div><div class="fb_sect_title">Description</div><div class="fb_sect_cont"><br \>
<tt><b>Any</b></tt> peut &ecirc;tre utilis&eacute; dans trois contextes: pointeurs, initialiseur de variable, arguments pointeur de fonctions et d&eacute;clarations de fonction pour indiquer un type de donn&eacute;es inconnu.<br \>
<br \>
<tt><b>1)</b></tt> Un type pointeur sp&eacute;cial appel&eacute; le <tt><b><a href="KeyPgPtr.html">Pointer</a> Any</b></tt> permet de pointer vers n'importe quel type de variable. Si vous le convertissez (cast) en un <tt><a href="KeyPgInteger.html">Integer</a> <a href="KeyPgPtr.html">Pointer</a></tt>, il fonctionnera sur le sujet comme s'il s'agissait d'un <tt><a href="KeyPgInteger.html">Integer</a></tt>, etc.<br \>
<br \>
Vous ne pouvez pas cr&eacute;er des variables de type <tt><b>Any</b></tt>. Il est ill&eacute;gal de d&eacute;r&eacute;f&eacute;rencer un <tt><b>Any Pointer</b></tt>, mais un <tt><b>Any Pointer Pointer</b></tt> peut &ecirc;tre d&eacute;r&eacute;f&eacute;renc&eacute;, parce que cela se traduira par un <tt><b>Any Pointer</b></tt>. Essayer de d&eacute;r&eacute;f&eacute;rencer ce <tt><b>Any Pointer</b></tt> qui en r&eacute;sulte serait ill&eacute;gal.<br \>
<br \>
Cela ne doit pas &ecirc;tre confondu avec <tt><b>Variant</b></tt>, un type de donn&eacute;es Visual Basic qui peut contenir tout type de variable. FreeBASIC ne supporte pas nativement le type <tt><b>Variant</b></tt>.<br \>
<br \>
<tt><b>2) </b></tt> <tt><b>Any</b></tt> peut &ecirc;tre utilis&eacute; comme un faux initialiseur pour d&eacute;sactiver l'initialisation par d&eacute;faut &agrave; <tt>0</tt> des variables. Cela peut faire gagner du temps dans les sections critiques des programmes. Il appartient au programme de remplir les variables avec des donn&eacute;es significatives. Vous pouvez reconna&icirc;tre que c'est le comportement par d&eacute;faut du langage C.<br \>
<br \>
<tt><b>3) </b></tt> <b><tt>Any</tt></b> peut &ecirc;tre utilis&eacute; dans les prototypes de fonctions (dans une d&eacute;claration <tt><a href="KeyPgDeclare.html">Declare</a></tt>) avec des arguments <tt><a href="KeyPgByref.html">ByRef</a></tt> pour d&eacute;sactiver la v&eacute;rification du compilateur du bon type de variable pass&eacute;e. Cette utilisation de <tt><b>Any</b></tt> est obsol&egrave;te et n'est l&agrave; que pour la compatibilit&eacute; avec QB, o&ugrave; c'&eacute;tait le seul moyen de passer des tableaux comme arguments.<br \>
<br \>
</div><div class="fb_sect_title">Exemple</div><div class="fb_sect_cont"><br \>
<tt><div class="freebasic">
<span class="key">Declare</span>&nbsp;<span class="key">Sub</span>&nbsp;<span class="wrd">echo</span><span class="oth">(</span><span class="key">ByVal</span>&nbsp;<span class="wrd">x</span>&nbsp;<span class="key">As</span>&nbsp;<span class="key">Any</span>&nbsp;<span class="key">Ptr</span><span class="oth">)</span>&nbsp;<span class="com">''&nbsp;echo&nbsp;will&nbsp;accept&nbsp;any&nbsp;pointer&nbsp;type</span><br />
<br />
<span class="key">Dim</span>&nbsp;<span class="key">As</span>&nbsp;<span class="key">Integer</span>&nbsp;<span class="wrd">a</span><span class="oth">(</span><span class="num">0</span>&nbsp;<span class="key">To</span>&nbsp;<span class="num">9</span><span class="oth">)</span>&nbsp;<span class="oth">=</span>&nbsp;<span class="key">Any</span>&nbsp;<span class="com">''&nbsp;this&nbsp;variable&nbsp;is&nbsp;not&nbsp;initialized</span><br />
<span class="key">Dim</span>&nbsp;<span class="key">As</span>&nbsp;<span class="key">Double</span>&nbsp;&nbsp;<span class="wrd">d</span><span class="oth">(</span><span class="num">0</span>&nbsp;<span class="key">To</span>&nbsp;<span class="num">4</span><span class="oth">)</span><br />
<br />
<span class="key">Dim</span>&nbsp;<span class="wrd">p</span>&nbsp;<span class="key">As</span>&nbsp;<span class="key">Any</span>&nbsp;<span class="key">Ptr</span><br />
<br />
<span class="key">Dim</span>&nbsp;<span class="wrd">pa</span>&nbsp;<span class="key">As</span>&nbsp;<span class="key">Integer</span>&nbsp;<span class="key">Ptr</span>&nbsp;<span class="oth">=</span>&nbsp;<span class="oth">@</span><span class="wrd">a</span><span class="oth">(</span><span class="num">0</span><span class="oth">)</span><br />
<span class="key">Print</span>&nbsp;<span class="quo">"Not&nbsp;initialized&nbsp;"</span><span class="oth">;</span><br />
<span class="wrd">echo</span>&nbsp;<span class="wrd">pa</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="com">''&nbsp;pass&nbsp;to&nbsp;echo&nbsp;a&nbsp;pointer&nbsp;to&nbsp;integer</span><br />
<br />
<span class="key">Dim</span>&nbsp;<span class="wrd">pd</span>&nbsp;<span class="key">As</span>&nbsp;<span class="key">Double</span>&nbsp;<span class="key">Ptr</span>&nbsp;<span class="oth">=</span>&nbsp;<span class="oth">@</span><span class="wrd">d</span><span class="oth">(</span><span class="num">0</span><span class="oth">)</span><br />
<span class="key">Print</span>&nbsp;<span class="quo">"Initialized&nbsp;"</span><span class="oth">;</span><br />
<span class="wrd">echo</span>&nbsp;<span class="wrd">pd</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="com">''&nbsp;pass&nbsp;to&nbsp;echo&nbsp;a&nbsp;pointer&nbsp;to&nbsp;double</span><br />
<br />
<span class="wrd">p</span>&nbsp;<span class="oth">=</span>&nbsp;<span class="wrd">pa</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="com">''&nbsp;assign&nbsp;to&nbsp;p&nbsp;a&nbsp;pointer&nbsp;to&nbsp;integer</span><br />
<span class="wrd">p</span>&nbsp;<span class="oth">=</span>&nbsp;<span class="wrd">pd</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="com">''&nbsp;assign&nbsp;to&nbsp;p&nbsp;a&nbsp;pointer&nbsp;to&nbsp;double&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><br />
<br />
<span class="key">Sleep</span><br />
<br />
<span class="key">Sub</span>&nbsp;<span class="wrd">echo</span>&nbsp;<span class="oth">(</span><span class="key">ByVal</span>&nbsp;<span class="wrd">x</span>&nbsp;<span class="key">As</span>&nbsp;<span class="key">Any</span>&nbsp;<span class="key">Ptr</span><span class="oth">)</span><br />
&nbsp;&nbsp;&nbsp;&nbsp;<span class="key">Dim</span>&nbsp;<span class="key">As</span>&nbsp;<span class="key">Integer</span>&nbsp;<span class="wrd">i</span><br />
&nbsp;&nbsp;&nbsp;&nbsp;<span class="key">For</span>&nbsp;<span class="wrd">i</span>&nbsp;<span class="oth">=</span>&nbsp;<span class="num">0</span>&nbsp;<span class="key">To</span>&nbsp;<span class="num">39</span><br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="com">'echo&nbsp;interprets&nbsp;the&nbsp;data&nbsp;in&nbsp;the&nbsp;pointer&nbsp;as&nbsp;bytes</span><br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="key">Print</span>&nbsp;<span class="key">Cast</span><span class="oth">(</span><span class="key">UByte</span>&nbsp;<span class="key">Ptr</span><span class="oth">,</span>&nbsp;<span class="wrd">x</span><span class="oth">)[</span><span class="wrd">i</span><span class="oth">]</span>&nbsp;<span class="oth">&amp;</span>&nbsp;<span class="quo">"&nbsp;"</span><span class="oth">;</span><br />
&nbsp;&nbsp;&nbsp;&nbsp;<span class="key">Next</span><br />
&nbsp;&nbsp;&nbsp;&nbsp;<span class="key">Print</span><br />
<span class="key">End</span>&nbsp;<span class="key">Sub</span><br />
</div></tt><br />
<br \>
<tt><div class="freebasic">
<span class="com">'Example&nbsp;of&nbsp;ANY&nbsp;disabling&nbsp;the&nbsp;variable&nbsp;type&nbsp;checking</span><br />
<span class="key">Declare</span>&nbsp;<span class="key">Sub</span>&nbsp;<span class="wrd">echo</span>&nbsp;<span class="oth">(</span><span class="key">ByRef</span>&nbsp;<span class="wrd">a</span>&nbsp;<span class="key">As</span>&nbsp;<span class="key">Any</span><span class="oth">)</span>&nbsp;<span class="com">''&nbsp;ANY&nbsp;disables&nbsp;the&nbsp;checking&nbsp;for&nbsp;the&nbsp;type&nbsp;of&nbsp;data&nbsp;passed&nbsp;to&nbsp;the&nbsp;function</span><br />
<br />
<span class="key">Dim</span>&nbsp;<span class="wrd">x</span>&nbsp;<span class="key">As</span>&nbsp;<span class="key">Single</span><br />
<span class="wrd">x</span>&nbsp;<span class="oth">=</span>&nbsp;<span class="oth">-</span><span class="num">15</span><br />
<span class="wrd">echo</span>&nbsp;<span class="wrd">x</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="com">''&nbsp;Passing&nbsp;a&nbsp;single&nbsp;to&nbsp;a&nbsp;function&nbsp;that&nbsp;expects&nbsp;an&nbsp;integer.&nbsp;The&nbsp;compiler&nbsp;does&nbsp;not&nbsp;complain!!&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><br />
<span class="key">Sleep</span><br />
<br />
<span class="key">Sub</span>&nbsp;<span class="wrd">echo</span>&nbsp;<span class="oth">(</span><span class="key">ByRef</span>&nbsp;<span class="wrd">a</span>&nbsp;<span class="key">As</span>&nbsp;<span class="key">Integer</span><span class="oth">)</span><br />
&nbsp;&nbsp;<span class="key">Print</span>&nbsp;<span class="key">Hex</span><span class="oth">(</span><span class="wrd">a</span><span class="oth">)</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br />
<span class="key">End</span>&nbsp;<span class="key">Sub</span><br />
<br />
</div></tt><br />
<br \>
</ul></div><div class="fb_sect_title">Diff&eacute;rences de dialecte</div><div class="fb_sect_cont"><br \>
<ul><li> Non disponible dans le dialecte <i><a href="CompilerOptlang.html">-lang qb</a></i>.<br \>
<br \>
</ul></div><div class="fb_sect_title">Diff&eacute;rences avec QB</div><div class="fb_sect_cont"><br \>
<ul><li> Pointeurs et initialiseurs sont nouveaux pour FreeBASIC.<br \>
<br \>
</ul></div><div class="fb_sect_title">Voir aussi</div><div class="fb_sect_cont"><br \>
<ul><li> <tt><a href="KeyPgDim.html">Dim</a></tt><br \>
<li> <tt><a href="KeyPgDeclare.html">Declare</a></tt><br \>
<br \>
</ul><br \>
   <br \>
</div>
</div>
</div> 
</div> 
</body>
</html>
