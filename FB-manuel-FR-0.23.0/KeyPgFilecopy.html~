<html>
<head>
<title>FileCopy</title>
<link rel="stylesheet" type="text/css" href="style.css">
</head>
<body>
<div id="fb_body_wrapper">
<div id="fb_tab">
<div id="fb_tab_l">FileCopy</div>
<div id="fb_tab_r">&nbsp;<img src="images/fblogo_mini.gif" /></div> 
</div> 
<div id="fb_pg_wrapper">
<div id="fb_pg_body">
	Copie un fichier<br \>
<br \>
<div class="fb_sect_title">Syntaxe</div><div class="fb_sect_cont"><tt><br \>
<a href="KeyPgDeclare.html">Declare</a> <a href="KeyPgFunction.html">Function</a> <b>FileCopy</b> ( <a href="KeyPgByval.html">ByVal</a> <i>source</i> <a href="KeyPgAs.html">As</a> <a href="KeyPgZstring.html">ZString</a> <a href="KeyPgPtr.html">Ptr</a>, <a href="KeyPgByval.html">ByVal</a> <i>destination</i> <a href="KeyPgAs.html">As</a> <a href="KeyPgZstring.html">ZString</a> <a href="KeyPgPtr.html">Ptr</a> ) <a href="KeyPgAs.html">As</a> <a href="KeyPgInteger.html">Integer</a><br \>
</tt><br \>
</div><div class="fb_sect_title">Usage</div><div class="fb_sect_cont"><tt><br \>
#include "file.bi"<br \>
<b>FileCopy</b> <i>source</i>, <i>destination</i><br \>
</tt><br \>
<i>ou</i><br \>
<tt><br \>
#include "file.bi"<br \>
<i>result</i> = <b>FileCopy</b>( <i>source</i>, <i>destination</i> )<br \>
</tt><br \>
</div><div class="fb_sect_title">Param&egrave;tres</div><div class="fb_sect_cont"><br \>
<tt><i>source</i></tt><br \>
<div class="fb_indent">Un argument <tt><a href="KeyPgString.html">String (Cha&icirc;ne)</a></tt> sp&eacute;cifiant le nom du fichier à partir duquel on copie.  Ce fichier doit exister.<br \>
</div><tt><i>destination</i></tt><br \>
<div class="fb_indent">Un argument <tt><a href="KeyPgString.html">String (Cha&icirc;ne)</a></tt> sp&eacute;cifiant le nom du fichier vers lequel on copie.  Ce fichier sera &eacute;cras&eacute; s'il existe.  Ce fichier ne doit pas &ecirc;tre actuellement r&eacute;f&eacute;renc&eacute; par un "handle" de fichier ouvert.<br \>
<br \>
</div></div><div class="fb_sect_title">Valeur retourn&eacute;e</div><div class="fb_sect_cont"><br \>
Retourne <tt>0</tt> si succ&egrave;s, ou <tt>1</tt> en cas d'erreur.<br \>
<br \>
</div><div class="fb_sect_title">Description</div><div class="fb_sect_cont"><br \>
Copie le contenu du fichier source dans le fichier destination, &eacute;crasant le fichier destination s'il existe d&eacute;jà.<br \>
Un <tt><a href="KeyPgInclude.html">#include</a></tt> <tt>"file.bi"</tt> ou <tt>"vbcompat.bi"</tt> est n&eacute;cessaire de fa&ccedil;on à avoir acc&egrave;s à cette fonction.<br \>
<br \>
</div><div class="fb_sect_title">Exemple</div><div class="fb_sect_cont"><br \>
<tt><div class="freebasic">
<span class="def">#include&nbsp;"file.bi"<br />
</span><span class="key">FileCopy</span>&nbsp;<span class="quo">"source.txt"</span><span class="oth">,</span>&nbsp;<span class="quo">"destination.txt"</span><br />
</div></tt><br />
<br \>
</div><div class="fb_sect_title">Diff&eacute;rences de plate-forme</div><div class="fb_sect_cont"><br \>
<ul><li> Linux n&eacute;cessite que la casse de <tt><i>filename</i></tt> corresponde au nom r&eacute;el du fichier. Windows et DOS ne sont pas sensibles à la casse. <br \>
<li> Les s&eacute;parateurs de chemin de Linux sont des barres obliques /. Windows utilise des barres obliques vers l'arri&egrave;re \ mais il admet des barres obliques.  DOS utilise des barres obliques en arri&egrave;re \. <br \>
<br \>
<br \>
</ul></div><div class="fb_sect_title">Diff&eacute;rences avec QB</div><div class="fb_sect_cont"><br \>
<ul><li> Nouveau pour FreeBASIC.  Existait dans Visual Basic.<br \>
<br \>
</ul></div><div class="fb_sect_title">Voir aussi</div><div class="fb_sect_cont"><br \>
<br \>
<br \>
   <br \>
</div>
</div>
</div> 
</div> 
</body>
</html>
